#!/usr/bin/env python
# Copyright (c) 2014  Instituto Nokia de Tecnologia (INdT)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

from __future__ import print_function
import argparse
from pprint import pprint
from target_format import *

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Parse nRF8001 setup data.")
    parser.add_argument("report", type=file,
            help="report generated by nRFgoStudio (ublue_setup.gen.out.txt)")
    args = parser.parse_args()

    version, setup_data = parse_setup(args.report)

    print("Raw Setup Data:")
    pprint(setup_data)

    print("\nTarget 0x00 (Version information):")
    target = Target_00.parse(setup_data[0x00].decode("hex"))
    print(target)
    assert target["DLL version"] == version

    print("\nTarget 0x10 (GAP/Security/Hardware settings):")
    target = Target_10.parse(setup_data[0x10].decode("hex"))
    print(target)

    print("\nTarget 0x20 (Attribute database):")
    target = Target_20.parse(setup_data[0x20].decode("hex"))
    print(target)

    print("\nTarget 0xF0 (Locking & CRC):")
    target = Target_F0.parse(setup_data[0xF0].decode("hex"))
    print(target)

